/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package picturematching.views;

import java.awt.Color;
import java.awt.Cursor;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.Timer;
import picturematching.Main;
import picturematching.events.CardClickListener;

/**
 *
 * @author Ramdan Rohendi
 */
public class Playing extends javax.swing.JFrame {
    private final String kesulitan;
    private final int jmlKartu;
    private int jmlTerbuka;
    private JLabel kartuPertama;
    private int jmlDone;
    private boolean pertamaKlik;
    private Timer waktuSpent;
    private int waktuSpentTerhitung;
    private Timer waktuLimit;
    private int waktuLimitTerhitung;

    public Playing() {
        initComponents();
        
        pertamaKlik = true;
        jmlTerbuka = 0;
        jmlDone = 0;
        
        this.kesulitan = Main.permainanController.getPengaturan().getKesulitan();
        
        if (this.kesulitan.equals("Normal")) {
            txtTimer.setText("");
            edtTimer.setText("");
        }
        
        if (this.kesulitan.equals("Hard")) {
            int batasWaktu = Main.permainanController.getPengaturan().getBatasWaktu();
            int minutesPassed = batasWaktu / 60;
            int secondsRemainder = batasWaktu % 60;
            String timeString = String.format("%02d:%02d", minutesPassed, secondsRemainder);
            edtTimer.setText(timeString);
        }
        
        this.jmlKartu = Main.permainanController.getPengaturan().getJmlKartu();
        int jmlBarisKartu = Main.permainanController.getPengaturan().getPengaturanGrid().getBaris();
        int jmlKolomKartu = Main.permainanController.getPengaturan().getPengaturanGrid().getKolom();
        int jmlJarakH = Main.permainanController.getPengaturan().getPengaturanGrid().getJarakH();
        int jmlJarakV = Main.permainanController.getPengaturan().getPengaturanGrid().getJarakV();
        
        MainLayar.setLayout(new java.awt.GridLayout(jmlBarisKartu, jmlKolomKartu, jmlJarakH, jmlJarakV));
        
        String dataKartu[] = Main.permainanController.getDataKartu(this.jmlKartu);
        
        for (int i = 0; i < this.jmlKartu; i++) {
            JLabel label = new JLabel("");
            label.setName((i+1) + " " + dataKartu[i]);
            label.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2));
            label.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            label.setHorizontalAlignment(JLabel.CENTER);
            label.addMouseListener(new CardClickListener(this));
            label.setBackground(Color.WHITE);
            MainLayar.add(label);
        }
    }

    public String getKesulitan() {
        return kesulitan;
    }
    
    public void setTxtInfoClick(String text) {
        this.txtInfoClick.setText(text);
    }

    public int getJmlKartu() {
        return jmlKartu;
    }
    
    public int getJmlTerbuka() {
        return jmlTerbuka;
    }

    public void setJmlTerbuka(int jmlTerbuka) {
        this.jmlTerbuka = jmlTerbuka;
    }

    public JLabel getKartuPertama() {
        return kartuPertama;
    }

    public void setKartuPertama(JLabel kartuPertama) {
        this.kartuPertama = kartuPertama;
    }

    public int getJmlDone() {
        return jmlDone;
    }

    public void setJmlDone(int jmlDone) {
        this.jmlDone = jmlDone;
    }

    public boolean isPertamaKlik() {
        return pertamaKlik;
    }

    public void setPertamaKlik(boolean pertamaKlik) {
        this.pertamaKlik = pertamaKlik;
    }

    public Timer getWaktuSpent() {
        return waktuSpent;
    }

    public void setWaktuSpent(Timer waktuSpent) {
        this.waktuSpent = waktuSpent;
    }

    public int getWaktuSpentTerhitung() {
        return waktuSpentTerhitung;
    }

    public void setWaktuSpentTerhitung(int waktuSpentTerhitung) {
        this.waktuSpentTerhitung = waktuSpentTerhitung;
    }

    public Timer getWaktuLimit() {
        return waktuLimit;
    }

    public void setWaktuLimit(Timer waktuLimit) {
        this.waktuLimit = waktuLimit;
    }

    public int getWaktuLimitTerhitung() {
        return waktuLimitTerhitung;
    }

    public void setWaktuLimitTerhitung(int waktuLimitTerhitung) {
        this.waktuLimitTerhitung = waktuLimitTerhitung;
    }

    public void setEdtTimer(String edtTimer) {
        this.edtTimer.setText(edtTimer);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMoves = new javax.swing.JLabel();
        edtMoves = new javax.swing.JLabel();
        gbr6 = new javax.swing.JLabel();
        gbr3 = new javax.swing.JLabel();
        gbr4 = new javax.swing.JLabel();
        gbr5 = new javax.swing.JLabel();
        gbr2 = new javax.swing.JLabel();
        gbr1 = new javax.swing.JLabel();
        PlayGame = new javax.swing.JPanel();
        Body = new javax.swing.JPanel();
        txtInfoClick = new javax.swing.JLabel();
        txtTimer = new javax.swing.JLabel();
        edtTimer = new javax.swing.JLabel();
        MainLayar = new javax.swing.JPanel();
        Foot = new javax.swing.JPanel();

        txtMoves.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtMoves.setForeground(new java.awt.Color(128, 79, 59));
        txtMoves.setText("Moves:");

        edtMoves.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        edtMoves.setForeground(new java.awt.Color(128, 79, 59));
        edtMoves.setText("13/13");

        gbr6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        gbr3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        gbr4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        gbr5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        gbr2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        gbr2.setName(""); // NOI18N

        gbr1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbr1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Picture Matching - Playing");
        setMaximumSize(new java.awt.Dimension(312, 500));
        setMinimumSize(new java.awt.Dimension(312, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PlayGame.setMaximumSize(new java.awt.Dimension(312, 500));
        PlayGame.setMinimumSize(new java.awt.Dimension(312, 500));

        Body.setBackground(new java.awt.Color(204, 204, 204));

        txtInfoClick.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        txtInfoClick.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtInfoClick.setText("Click any picture to start");

        txtTimer.setFont(new java.awt.Font("Rockwell", 0, 20)); // NOI18N
        txtTimer.setText("Timer:");

        edtTimer.setFont(new java.awt.Font("Rockwell", 0, 20)); // NOI18N
        edtTimer.setText("00:00");

        MainLayar.setBackground(new java.awt.Color(204, 204, 204));
        MainLayar.setMaximumSize(new java.awt.Dimension(300, 386));
        MainLayar.setMinimumSize(new java.awt.Dimension(300, 386));
        MainLayar.setLayout(new java.awt.GridLayout(3, 2, 45, 20));

        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtInfoClick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BodyLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(txtTimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtTimer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BodyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainLayar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        BodyLayout.setVerticalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtInfoClick)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimer)
                    .addComponent(edtTimer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainLayar, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        Foot.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout FootLayout = new javax.swing.GroupLayout(Foot);
        Foot.setLayout(FootLayout);
        FootLayout.setHorizontalGroup(
            FootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );
        FootLayout.setVerticalGroup(
            FootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PlayGameLayout = new javax.swing.GroupLayout(PlayGame);
        PlayGame.setLayout(PlayGameLayout);
        PlayGameLayout.setHorizontalGroup(
            PlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Foot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PlayGameLayout.setVerticalGroup(
            PlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayGameLayout.createSequentialGroup()
                .addGap(0, 465, Short.MAX_VALUE)
                .addComponent(Foot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Home home = new Home();
        home.setLocation(this.getLocation());
        home.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Playing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Playing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Playing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Playing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Playing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Foot;
    private javax.swing.JPanel MainLayar;
    private javax.swing.JPanel PlayGame;
    private javax.swing.JLabel edtMoves;
    private javax.swing.JLabel edtTimer;
    private javax.swing.JLabel gbr1;
    private javax.swing.JLabel gbr2;
    private javax.swing.JLabel gbr3;
    private javax.swing.JLabel gbr4;
    private javax.swing.JLabel gbr5;
    private javax.swing.JLabel gbr6;
    private javax.swing.JLabel txtInfoClick;
    private javax.swing.JLabel txtMoves;
    private javax.swing.JLabel txtTimer;
    // End of variables declaration//GEN-END:variables
}
